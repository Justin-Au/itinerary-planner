// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String?     // Nullable for OAuth users
  name          String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  oauthProvider String?     // e.g., "google", "facebook"
  oauthId       String?     // ID from the OAuth provider
  itineraries   Itinerary[]

  @@map("users")
}

model Itinerary {
  id          String   @id @default(uuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  items       Item[]

  @@map("itineraries")
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  icon  String?
  color String?
  items Item[]

  @@map("categories")
}

model Item {
  id          String    @id @default(uuid())
  name        String
  description String?
  date        DateTime
  startTime   DateTime?
  endTime     DateTime?
  location    String?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Relations
  itineraryId String
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id], onDelete: Cascade)
  
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id])
  
  cost        Cost?

  @@map("items")
}

model Cost {
  id       String @id @default(uuid())
  amount   Float
  currency String @default("USD")
  
  // Relation to Item
  itemId   String @unique
  item     Item   @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@map("costs")
}
